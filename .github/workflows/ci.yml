name: CI
on:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x]
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up Cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install packages
        run: pnpm install
      - name: Package build archive
        run: pnpm run build-rust-release && node .github/workflows/build-package.js
      - name: Save build archive
        uses: actions/upload-artifact@v2
        with:
          name: build-archive-${{ matrix.os }}
          path: build/*.tar.gz

  publish-release:
    name: Publish release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Fetch build archives
        uses: actions/download-artifact@v2
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "build-archive-*/*.tar.gz"
          omitBody: true
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-to-npm:
    name: Publish to NPM
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install packages
        run: pnpm install
      - name: Build TS
        run: npx tsc && pnpm run build-ts
      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: npm publish
